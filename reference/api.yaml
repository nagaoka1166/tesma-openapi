openapi: 3.1.0
x-stoplight:
  id: b02cv95ew8lae
info:
  title: api
  version: '1.0'
servers:
  - url: 'http://localhost:3000/v1'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  /signup:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
                    x-stoplight:
                      id: hzhbkn9x69v8y
                  refreshToken:
                    type: string
                    x-stoplight:
                      id: deny3s64fmo37
                  expiresIn:
                    type: string
                    x-stoplight:
                      id: a054se8dlz3d5
                  email:
                    type: string
                    x-stoplight:
                      id: ybphe96ka87qn
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  x-stoplight:
                    id: f8fcdly6khk8c
              required:
                - email
                - password
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-internal: false
      tags:
        - ユーザー情報
    parameters: []
  /refresh_token:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-refresh_token
    post:
      summary: ''
      operationId: post-refresh_token
      responses:
        '201':
          description: Created
components:
  schemas:
    User:
      title: User
      type: object
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      x-stoplight:
        id: a3lizesgzq612
      properties:
        firstName:
          type: string
          x-stoplight:
            id: 0hsbrb9jnk58f
        lastName:
          type: string
          x-stoplight:
            id: 55ohxoz7jf6hq
        firstNameKana:
          type: string
          x-stoplight:
            id: 6ki6odd9qyznu
        lastNameKana:
          type: string
          x-stoplight:
            id: da432p935vq8t
        email:
          type: string
          format: email
          x-stoplight:
            id: 3u31r7advx0cl
        birthDate:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: 3nuzi525yxbom
      required:
        - firstName
        - lastName
        - firstNameKana
        - lastNameKana
        - email
        - birthDate
